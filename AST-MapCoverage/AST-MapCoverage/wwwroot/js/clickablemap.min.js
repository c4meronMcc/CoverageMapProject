document.addEventListener('DOMContentLoaded', function () {
    const mapElement = document.getElementById('map');
    const svgPath = '/SVGMapOverlays2.svg';

    function loadSvgFile() {
        fetch(svgPath)
            .then(response => response.text())
            .then(svgText => {
                mapElement.innerHTML = svgText;
                addEventListeners();
                initializePanZoom();
            })
            .catch(error => console.error('Failed to load SVG file:', error));
    }

    function addEventListeners() {
        const areas = mapElement.querySelectorAll('path');

        areas.forEach(area => {
            area.addEventListener('click', function (event) {
                const clickedElement = event.target;

                // Check if the clicked element has the 'sea-ocean' class
                if (clickedElement.classList.contains('sea-ocean')) {
                    const seaOceanAreas = mapElement.querySelectorAll('.sea-ocean.clicked');
                    seaOceanAreas.forEach(area => {
                        area.style.fill = '#B2BEB5';
                        area.classList.remove('clicked');
                    });
                    clickedElement.style.fill = 'blue';
                    clickedElement.classList.add('clicked');
                } else if (clickedElement.classList.contains('land')) {
                    const landAreas = mapElement.querySelectorAll('.land.clicked');
                    landAreas.forEach(area => {
                        area.style.fill = '#B2BEB5';
                        area.classList.remove('clicked');
                    });
                    clickedElement.style.fill = 'green';
                    clickedElement.classList.add('clicked');
                }
            });
        });
    }

    function handleClick(event) {
        // Handle the click event for land areas here
        console.log('Clicked on land:', event.target);
    }

    // Get references to the land area elements
    const landAreas = document.querySelectorAll('.land');

    // Add the click event listener to each land area element
    landAreas.forEach(landArea => {
        landArea.addEventListener('click', handleClick);
    });

    function resetCountryColors() {
        const clickedPaths = mapElement.querySelectorAll('.clicked');
        clickedPaths.forEach(path => {
            path.classList.remove('clicked');
            path.style.fill = '';
        });
    }

    function initializePanZoom() {
        const mapSvg = mapElement.querySelector('svg');
        const panZoomMap = svgPanZoom(mapSvg, {
            zoomEnabled: true,
            controlIconsEnabled: true,
            fit: true,
            center: true,
        });

        function resizePanZoomContainer() {
            const mapRect = mapSvg.getBoundingClientRect();
            panZoomMap.resize(mapRect.width, mapRect.height);
        }

        // Resize the container initially
        resizePanZoomContainer();

        // Resize the container when the window is resized
        window.addEventListener('resize', resizePanZoomContainer);
    }
    loadSvgFile();
});