document.addEventListener('DOMContentLoaded', function () {
    const mapElement = document.getElementById('map');
    const svgPath = '/SVGMapOverlays2.svg';
    const pinIconPath = '/mapPinIcon.jpg';

    let selectedArea = null;
    let isDragging = false;
    let isMoving = false;
    let startX = 0;
    let startY = 0;
    let currentPinIcon = null;

    function loadSvgFile() {
        fetch(svgPath)
            .then(response => response.text())
            .then(svgText => {
                mapElement.innerHTML = svgText;
                addEventListeners();
                initializePanZoom();
            })
            .catch(error => console.error('Failed to load SVG file:', error));
    }

    function addEventListeners() {
        const areas = mapElement.querySelectorAll('path');

        areas.forEach(area => {
            area.addEventListener('mousedown', handleMouseDown);
            area.addEventListener('mouseup', handleMouseUp);
            area.addEventListener('mouseenter', handleMouseEnter);
            area.addEventListener('mouseleave', handleMouseLeave);
            area.addEventListener('click', handleAreaClick);
        });

        mapElement.addEventListener('mousemove', handleMouseMove);
    }

    function handleMouseDown(event) {
        isDragging = true;
        startX = event.clientX;
        startY = event.clientY;
    }

    function handleMouseUp() {
        if (!isMoving && !isDragging) {
            clearSelection();
        }
        isDragging = false;
    }

    function handleMouseEnter() {
        if (isDragging) {
            mapElement.style.cursor = 'move';
        }
    }

    function handleMouseLeave() {
        mapElement.style.cursor = 'default';
    }

    function handleMouseMove(event) {
        if (isDragging) {
            const currentX = event.clientX;
            const currentY = event.clientY;
            const deltaX = currentX - startX;
            const deltaY = currentY - startY;

            if (deltaX !== 0 || deltaY !== 0) {
                isMoving = true;
                mapElement.style.cursor = 'move';
            }
        }
    }

    function handleAreaClick(event) {
        if (!isDragging && !isMoving) {
            const clickedElement = event.target;
            const isSeaOcean = clickedElement.classList.contains('sea-ocean');

            // Remove the previous pin icon if it exists
            if (currentPinIcon) {
                currentPinIcon.remove();
            }

            // Create the pin icon element
            const pinIcon = document.createElement('img');
            pinIcon.src = pinIconPath;
            pinIcon.classList.add('pin-icon');

            // Set the position of the pin icon based on the clicked coordinates
            const pinSizePercentage = 0.15;
            const pinWidth = pinIcon.width * pinSizePercentage;
            const pinHeight = pinIcon.height * pinSizePercentage;
            const clickedX = event.clientX - pinWidth / 2;
            const clickedY = event.clientY - pinHeight / 2;
            pinIcon.style.width = `${pinWidth}px`;
            pinIcon.style.height = `${pinHeight}px`;
            pinIcon.style.left = `${clickedX}px`;
            pinIcon.style.top = `${clickedY}px`;

            // Append the pin icon to the map
            mapElement.appendChild(pinIcon);

            // Toggle the selection
            if (clickedElement.classList.contains('clicked')) {
                clickedElement.style.fill = isSeaOcean ? '#B2BEB5' : '#899499';
                clickedElement.classList.remove('clicked');
                selectedArea = null;
            } else {
                clearSelection();

                // Highlight the clicked area
                clickedElement.style.fill = isSeaOcean ? '#6082B6' : '#8A9A5B';
                clickedElement.classList.add('clicked');
                selectedArea = clickedElement;
            }
        }
        isMoving = false;
    }

    function clearSelection() {
        if (selectedArea) {
            const isSeaOcean = selectedArea.classList.contains('sea-ocean');
            selectedArea.style.fill = isSeaOcean ? '#B2BEB5' : '#899499';
            selectedArea.classList.remove('clicked');
        }
    }

    function initializePanZoom() {
        const mapSvg = mapElement.querySelector('svg');
        const panZoomMap = svgPanZoom(mapSvg, {
            zoomEnabled: true,
            controlIconsEnabled: true,
            fit: true,
            center: true,
            minZoom: 1,
        });

        function resizePanZoomContainer() {
            const mapRect = mapSvg.getBoundingClientRect();
            panZoomMap.resize(mapRect.width, mapRect.height);
        }

        resizePanZoomContainer();

        window.addEventListener('resize', resizePanZoomContainer);
    }

    loadSvgFile();
});